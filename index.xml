<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>edermi's Blog</title><link>https://edermi.github.io/</link><description>Recent content on edermi's Blog</description><generator>Hugo</generator><language>en-us</language><managingEditor>spam-blog@michael-eder.net (Michael Eder)</managingEditor><webMaster>spam-blog@michael-eder.net (Michael Eder)</webMaster><lastBuildDate>Mon, 09 Sep 2024 17:51:10 +0200</lastBuildDate><atom:link href="https://edermi.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Vulnerabilities on vmwareidentity.de (XSS) and in VMware UEM (exportable authentication certificate)</title><link>https://edermi.github.io/post/2021/vmware_vulnerabilities/</link><pubDate>Sun, 29 Aug 2021 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/post/2021/vmware_vulnerabilities/</guid><description>&lt;p>This post is a short notice about vulnerabilities in VMware products I found earlier this year.
During a penetration test of a freshly built environment, I took a closer look at VMware Unified Access Gateway (UAG) in combination with devices enrolled and managed via VMware Unified Endpoint Management (UEM).
I found a reflected XSS vulnerability on VMware&amp;rsquo;s authenticator &lt;code>vmwareidentity.de&lt;/code> that can be abused by sending links to unauthenticated victims.
Also, I found it possible to export a user&amp;rsquo;s authentication certificate, which allows to access zero trust protected resources without access to the user&amp;rsquo;s device or account on a trusted system.
There has been no advisory or notification for affected customers I am aware of.
The disclosure deadline was already a few weeks ago and VMware did not respond to multiple attempts of contacting them as well as offering an extension of the responsible disclosure timeframe, therefore I am releasing the vulnerability details to the public.&lt;/p></description></item><item><title>Modding Gophish</title><link>https://edermi.github.io/post/2021/modding_gophish/</link><pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/post/2021/modding_gophish/</guid><description>&lt;p>&lt;em>&lt;strong>TL;DR&lt;/strong>&lt;/em>: &lt;em>I&amp;rsquo;ll shine a light on Gophish and how to modify it to change behavior or introduce/remove functionality. At the end of this post, you&amp;rsquo;ll know how to host custom 404 pages in Gophish and how to abuse HTTP basic auth instead of login forms embedded on the landing page to obtain juicy creds.&lt;/em>&lt;/p>
&lt;p>A few days ago I tweeted one of my modifications to Gophish:&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">After low click rates in my last phishing campaign due to staff being extremely well trained for this kind of attack, I modded gophish to show an HTTP Basic auth request instead of a phishing site. Once data is entered, users are redirected to a legit site: &lt;a href="https://t.co/LncsgT8OSE">pic.twitter.com/LncsgT8OSE&lt;/a>&lt;/p></description></item><item><title>Abusing accounts that already changed their password</title><link>https://edermi.github.io/post/2020/abusing_accounts_that_changed_passwords/</link><pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/post/2020/abusing_accounts_that_changed_passwords/</guid><description>&lt;p>&lt;em>&lt;strong>TL;DR&lt;/strong>&lt;/em>: &lt;em>In some circumstances, you may find usable Kerberos TGTs on a system you compromised - these allow you to impersonate a user that already changed its password (e.g. because the user got suspicious or a PAM solution is in place).&lt;/em>&lt;/p>
&lt;h1 id="intro">Intro&lt;/h1>
&lt;p>On a recent project, I was tasked with the usual goal: Start from the ground and find a way to take over the company - in the end, if possible, somehow become Domain Admin.
Getting started was tough, but after some time I got my hands on a few admin accounts and had a way to take control of the Domain Admins - but the way involved resetting the password of a service account.
Unless I do not have a very good reason to perform the password change or the explicit &amp;ldquo;Do it!&amp;rdquo; from the customer, I prefer finding another way.
Lurking for a few days on the machines I gained access so far, I discovered two accounts that logged on recently.
They both provided a simpler way to become Domain Admin because they were allowed to write the Domain Admin group directly - Jackpot!&lt;/p></description></item><item><title>Passing the hash with native RDP client (mstsc.exe)</title><link>https://edermi.github.io/post/2018/native_rdp_pass_the_hash/</link><pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/post/2018/native_rdp_pass_the_hash/</guid><description>&lt;p>&lt;em>&lt;strong>TL;DR:&lt;/strong> If the remote server allows Restricted Admin login, it is possible to login via RDP by passing the hash using the native Windows RDP client &lt;code>mstsc.exe&lt;/code>. (You&amp;rsquo;ll need mimikatz or something else to inject the hash into the process)&lt;/em>&lt;/p>
&lt;p>On engagements it is usually only a matter of time to get your hands on NTLM hashes.
These can usually be directly used to authenticate against other services / machines and enable lateral movement.
Powershell / PSExec, SMB and WMI are usual targets to pass the hash to, but it is also possible to use it to establish a RDP session on a remote host.
Searching the Internet on how to do this unfortunately always leads to &lt;a href="https://www.kali.org/penetration-testing/passing-hash-remote-desktop/">using xfreerdp&lt;/a>, but I wasn&amp;rsquo;t able to find anything on the Internet regarding how to do this directly using the provided RDP client &lt;code>mstsc.exe&lt;/code>, so I had to find out on my own.&lt;/p></description></item><item><title>Präsentationen mit Markdown (oder was auch immer)</title><link>https://edermi.github.io/post/2017/praesentieren_mit_markdown/</link><pubDate>Fri, 03 Feb 2017 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/post/2017/praesentieren_mit_markdown/</guid><description>&lt;p>Mir ist zwar das Tool &lt;a href="http://pandoc.org/">pandoc&lt;/a> als universeller Dokumentconverter schon länger
ein Begriff, aber ich bin erst vor kurzem wieder darauf aufmerksam geworden, und zwar um damit
Präsentationen in Markdown (oder reStructuredText, Docbook, whatever) zu erstellen und diese dann
zu LaTeX Beamer Präsentationen zu konvertieren. Es werden aber auch andere Formate unterstützt,
zum Beispiel HTML5 Präsentationen mit reveal.js oder anderen Frameworks.&lt;/p>
&lt;p>&lt;img src="https://edermi.github.io/img/brent_rambo.gif" alt="Brent Rambo Gif">&lt;/p>
&lt;p>Folgende Markdown-Datei lässt sich mittels pandoc direkt in eine Beamer-Präsentation konvertieren:&lt;/p></description></item><item><title>Werbeblocker via unbound</title><link>https://edermi.github.io/post/2016/werbeblocker-via-unbound/</link><pubDate>Tue, 01 Mar 2016 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/post/2016/werbeblocker-via-unbound/</guid><description>&lt;p>Ich betreibe seit längerem auf einem ansonsten ungenutzten Raspberry Pi meinen eigenen DNS-Resolver.
Auf dem Raspberry Pi läuft dabei Arch Linux und unbound als DNS Resolver. Natürlich könnte man
auch einen anderen Resolver, bspw. von Google oder dem Telco nehmen, aber auf der einen Seite läuft man dann
Gefahr, dass alle DNS-Anfragen getrackt werden, Antworten manipuliert werden oder man sogar auf unerwünschte
Werbeseiten umgeleitet wird (die Telekom hat das mal gemacht und macht es schätzungsweise immer noch).&lt;/p></description></item><item><title>zsh: letzten Befehl als root ausführen</title><link>https://edermi.github.io/post/2015/zsh-letzten-befehl-als-root/</link><pubDate>Tue, 29 Sep 2015 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/post/2015/zsh-letzten-befehl-als-root/</guid><description>&lt;p>Klassiker im Alltag eines Terminal-Nutzers: Das &lt;code>sudo&lt;/code> vergessen. Viele gehen dann in der History zurück,
scrollen von Hand an den anfang und tippen halt &lt;code>sudo&lt;/code> noch davor hin. Etwas bequemer ist da schon &lt;code>sudo !!&lt;/code>,
wobei mir das auch noch zu viel Schreibarbeit ist. Inspiriert von einem
&lt;a href="http://askubuntu.com/questions/165327/rerun-previous-command-under-sudo">askubuntu-Thread&lt;/a> habe ich mir den
&lt;code>pls&lt;/code>-Befehl definiert. Dazu einfach folgendes ans Ende der &lt;code>~/.zshrc&lt;/code> schreiben:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">alias&lt;/span> &lt;span class="nv">pls&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;sudo $(fc -ln -1)&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pr</description></item><item><title>Windows 10 Installationsimage unter Linux auf USB Stick installieren</title><link>https://edermi.github.io/post/2015/windows-10-auf-usb-unter-linux/</link><pubDate>Mon, 25 May 2015 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/post/2015/windows-10-auf-usb-unter-linux/</guid><description>&lt;p>Ich wollte mir mal Windows 10 außerhalb einer virtuellen Umgebung anschauen - mein Laptop hat leider kein
DVD-Laufwerk, weswegen ich die Installation vom USB-Stick durchführen muss. Prinzipiell ist das meiner
Meinung nach sowieso immer der way-to-go, da man den Stick wiederverwenden kann und alles sowieso schneller
geht als von der DVD. Bei iso-Dateien von Linux-Distributionen hat bisher immer ein &lt;code>dd&lt;/code> gereicht um die
Images bootbar auf den USB-Stick zu verfrachten. Wie sich heraus stellt ist das bei Windows etwas mehr Arbeit,
weswegen ich diesen Post schreibe falls andere ähnliche Probleme haben.&lt;/p></description></item><item><title>Accountspezifische Email-Adressen mit E-Mail subaddressing</title><link>https://edermi.github.io/post/2014/email-subaddressing/</link><pubDate>Wed, 17 Sep 2014 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/post/2014/email-subaddressing/</guid><description>&lt;p>Bisher habe ich für alle Seiten, bei denen ich mich registriert habe, eine eigene E-Mail Adresse mit
Weiterleitung auf ein Sammelpostfach angelegt. Das hat den Vorteil, dass man Emails relativ leicht sortieren
kann, man sofort sieht wo der Spam her kommt und man sich einer solchen Adresse auch wieder relativ
schnell entledigen kann. Das Anlegen einer neuen E-Mail Adresse ist in meinem Fall auch nicht viel mehr als
einmal per SSH einloggen, Name und Passwort für die Adresse ausdenken und Weiterleitung einrichten.&lt;/p></description></item><item><title>About</title><link>https://edermi.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/about/</guid><description>&lt;p>Hi, I&amp;rsquo;m Michael.&lt;/p>
&lt;p>I started my B.Sc. in Computer Science at Technische Universität München (TUM) in 2013 and graduated in 2016 (B.Sc.) and 2019 (M.Sc.).
From 2014 to 2016 I worked at research institute as research assistant and got my hands dirty with Android security and the development of a vulnerability scanner for Android applications.
Since 2016 I&amp;rsquo;m doing penetration testing, social engineering, red teaming, physical security and lots of fun stuff for &lt;a href="https://www.hvs-consulting.de/">HvS-Consulting&lt;/a>, an IT security consultancy located near Munich.
I&amp;rsquo;m a &lt;a href="https://eu.badgr.com/public/assertions/dtEIp7atSV2lAHZ-e4DQJA?identity__email=eder@hvs-consulting.de">Certified Red Team Operator (CRTO)&lt;/a> and generally like to hang out on conferences. Sometimes I also give talks.&lt;/p></description></item><item><title>turingcomplete</title><link>https://edermi.github.io/turingcomplete/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>spam-blog@michael-eder.net (Michael Eder)</author><guid>https://edermi.github.io/turingcomplete/</guid><description>&lt;p>As one of my hobbies, I collect stuff that is &lt;a href="https://en.wikipedia.org/wiki/Turing_completeness">turing complete&lt;/a>.
The original idea comes from
&lt;a href="http://beza1e1.tuxen.de/articles/accidentally_turing_complete.html">Andreas Zwinkau&amp;rsquo;s &amp;ldquo;Accidentally Turing-Complete&amp;rdquo;&lt;/a>.
Here is his list:&lt;/p>
&lt;ul>
&lt;li>C++ Templates&lt;/li>
&lt;li>X86 MMU&lt;/li>
&lt;li>Magic: The Gathering&lt;/li>
&lt;li>HTML5 + CSS3&lt;/li>
&lt;li>Minecraft&lt;/li>
&lt;li>SQL (with Common Table Expressions and Windowing)&lt;/li>
&lt;li>C Preprocessor (if executed in a loop)&lt;/li>
&lt;li>Apache Rewrite Rules&lt;/li>
&lt;li>Pokemon Yellow&lt;/li>
&lt;li>Scala Type System&lt;/li>
&lt;li>MediaWiki Templates&lt;/li>
&lt;li>Little Big Planet&lt;/li>
&lt;li>Server Side Includes&lt;/li>
&lt;li>Sendmail&lt;/li>
&lt;li>Border Gateway Protocol (BGP)&lt;/li>
&lt;li>Excel&lt;/li>
&lt;/ul>
&lt;p>My additions:&lt;/p></description></item></channel></rss>